name: Example
on:
  push:

jobs:
  android:
    name: Android APKs
    strategy:
      matrix:
        flutter-version: [3.x, 3.0.0]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - id: flutter-action
        uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ matrix.flutter-version }}
      - name: Cache pub get
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: pub-cache-${{ steps.flutter-action.outputs.VERSION }}-${{ hashFiles('example/pubspec.lock') }}

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          cache: gradle
          distribution: temurin
          java-version: "11"

      - run: flutter build apk --split-per-abi
        working-directory: example

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.flutter-action.outputs.VERSION }}-arm64-v8a
          path: example/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.flutter-action.outputs.VERSION }}-armeabi-v7a
          path: example/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.flutter-action.outputs.VERSION }}-x86_64
          path: example/build/app/outputs/flutter-apk/app-x86_64-release.apk

  ios:
    name: iOS integration tests
    strategy:
      matrix:
        include:
          # oldest available macOS version on GitHub Actions with latest Flutter version
          - flutter-version: 3.x
            macos-version: macos-11
          # latest available macOS version on GitHub Actions with latest Flutter version
          - flutter-version: 3.x
            macos-version: macos-12
          # oldest supported combination
          - flutter-version: 3.0.0
            macos-version: macos-11
    runs-on: ${{ matrix.macos-version }}

    steps:
      - uses: actions/checkout@v3
      - id: flutter-action
        uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ matrix.flutter-version }}

      - name: Cache pub get
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: pub-cache-${{ steps.flutter-action.outputs.VERSION }}-${{ hashFiles('example/pubspec.lock') }}
      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: example/ios/Pods
          key: example-ios-pods-${{ steps.flutter-action.outputs.VERSION }}-${{ hashFiles('example/ios/Podfile.lock') }}

      - name: Create iOS simulator
        run: |
          set -e
          _runtime=$(xcrun simctl list runtimes ios -j | jq -r '.runtimes[-1]')
          _runtimeId=$(echo $_runtime | jq -r .identifier)
          echo "_runtimeId=$_runtimeId"

          _deviceType=$(echo $_runtime | jq -r '.supportedDeviceTypes[-1]')
          _deviceTypeName=$(echo $_deviceType | jq -r .name)
          echo "_deviceTypeName=$_deviceTypeName"
          _deviceTypeId=$(echo $_deviceType | jq -r .identifier)
          echo "_deviceTypeId=$_deviceTypeId"

          xcrun simctl create "$_deviceTypeName" "$_deviceTypeId" "$_runtimeId" | xargs xcrun simctl boot

      - run: ./example/integration_test/execute.sh
